worker_processes 1;

events {
    worker_connections 1024;
}

http {
    include /opt/homebrew/etc/nginx/mime.types;
    default_type off;
    access_log /tmp/nginx.access.log;
    error_log /tmp/nginx.error.log;

    server {
        listen 80;
        root /Users/diegovaille/Git/pib/primeira-store-frontend/app;
        index index.html;

        location ~* \.(html|js|css)$ {
            add_header Cache-Control "no-store, no-cache, must-revalidate";
        }

        # Redireciona callback do Google OAuth
        location /login/oauth2/ {
            proxy_pass http://localhost:8080/login/oauth2/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;
        }

        location /oauth2/ {
            proxy_pass http://localhost:8080/oauth2/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;
        }

        # Proxy API requests to Spring Boot backend
        location /api/ {
            proxy_pass http://localhost:8080/api/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Port $server_port;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Proto https;
        }

        # Serve arquivos normalmente, incluindo .html diretamente
        location / {
            try_files $uri $uri.html $uri/ =404;
        }
        # Garante que css, js, images funcionem corretamente
    }
}