name: Deploy Backend to Oracle VM

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up Docker Buildx (multi-platform builder)
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image (x86_64)
        run: |
          docker buildx build --platform linux/amd64 -t storehouse-api:latest --load .

      - name: Save Docker image
        run: |
          docker save storehouse-api:latest | gzip > storehouse-api.tar.gz
          echo "Docker image saved as storehouse-api.tar.gz"

      - name: Debug Key
        run: |
          echo "${{ secrets.OCI_VM_SSH_KEY }}" | base64 -d > key.pem
          chmod 600 key.pem
          ssh -i key.pem -o StrictHostKeyChecking=no ${{ vars.OCI_VM_SSH_USER }}@${{ vars.OCI_VM_HOST }} echo ok

      - name: Upload image to VM
        uses: appleboy/scp-action@v0.1.3
        with:
          host: ${{ vars.OCI_VM_HOST }}
          username: ${{ vars.OCI_VM_SSH_USER }}
          key: ${{ secrets.OCI_VM_SSH_KEY }}
          source: storehouse-api.tar.gz
          target: /home/${{ vars.OCI_VM_SSH_USER }}

      - name: Deploy and setup via SSH
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ vars.OCI_VM_HOST }}
          username: ${{ vars.OCI_VM_SSH_USER }}
          key: ${{ secrets.OCI_VM_SSH_KEY }}
          script: |
            set -e
            cd /home/${{ vars.OCI_VM_SSH_USER }}

            echo "Installing Nginx and Certbot..."
            sudo apt update
            sudo apt install -y nginx certbot python3-certbot-nginx

            echo "Configuring Nginx reverse proxy..."
            sudo tee /etc/nginx/sites-available/backend <<'EOF'
            server {
                listen 80;
                server_name api.primeira.app.br;

                location / {
                    proxy_pass http://localhost:8080;
                    proxy_set_header Host $host;
                    proxy_set_header X-Real-IP $remote_addr;
                    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                    proxy_set_header X-Forwarded-Proto $scheme;
                }
            }
            EOF
          
            sudo ln -sf /etc/nginx/sites-available/backend /etc/nginx/sites-enabled/backend
            sudo nginx -t
            sudo systemctl reload nginx
            
            echo "Attempting to issue SSL certificate (if DNS resolved)..."
            if ping -c 1 api.primeira.app.br >/dev/null 2>&1; then
            sudo certbot --nginx -n --agree-tos --redirect --email diegovaille@gmail.com -d api.primeira.app.br
            else
            echo "Skipping certbot: DNS not resolved yet."
            fi
            
            echo "Deploying backend container..."
            docker rm -f storehouse-api || true
            gunzip -c storehouse-api.tar.gz | docker load
            
            docker run -d --name storehouse-api \
            -e SPRING_PROFILES_ACTIVE=prod \
            -e GOOGLE_CLIENT_ID='${{ secrets.GOOGLE_CLIENT_ID }}' \
            -e GOOGLE_CLIENT_SECRET='${{ secrets.GOOGLE_CLIENT_SECRET }}' \
            -e JWT_SECRET='${{ secrets.JWT_SECRET }}' \
            -e ISBNDB_API_KEY='${{ secrets.ISBNDB_API_KEY }}' \
            -e S3_ACCESS_KEY='${{ secrets.S3_ACCESS_KEY }}' \
            -e S3_SECRET_KEY='${{ secrets.S3_SECRET_KEY }}' \
            -e POSTGRES_HOST=150.230.75.129 \
            -e POSTGRES_USER='${{ secrets.POSTGRES_USER }}' \
            -e POSTGRES_PASSWORD='${{ secrets.POSTGRES_PASSWORD }}' \
            -p 8080:8080 \
            storehouse-api:latest
